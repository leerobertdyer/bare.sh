#!/usr/bin/env bash

[[ -t 0 ]] || input=$(cat)

format='text' # (default format)

remaining_args=() && while [[ $# -gt 0 ]]; do
	case $1 in
		--phone|--telephone) format='phone' && shift ;;

		*) remaining_args+=("$1") && shift
	esac
done && set -- "${remaining_args[@]}"

case $format in
	phone)
		variant='hyphens' # (default variant)
		remaining_args=() && while [[ $# -gt 0 ]]; do
			case $1 in
				--parentheses|--parenthetical|--paren) variant='parentheses' && shift ;;
				--hyphens|--hyphenated|--dashes|--dashed) variant='hyphens' && shift ;;
				--dots|--dotted|--periods) variant='dots' && shift ;;
				--spaces|--spaced) variant='spaces' && shift ;;
				--plain|--raw|--none|--clean) variant='plain' && shift ;;
				*) remaining_args+=("$1") && shift
			esac
		done && set -- "${remaining_args[@]}"
		;;
	text)
		remaining_args=() && while [[ $# -gt 0 ]]; do
			case $1 in
				--uppercase|--upper|--caps) variant='uppercase' && shift ;;
				--lowercase|--lower) variant='lowercase' && shift ;;
				--capitalize|--capitalized) variant='capitalize' && shift ;;
				*) remaining_args+=("$1") && shift
			esac
		done && set -- "${remaining_args[@]}"
		;;
esac

[[ -z $input ]] && input="$1"

case $format in
	phone)
		phone_number=$(echo "$input" | tr -cd '[:digit:]')
		# Check if phone number is a digit
		if ! [[ $phone_number =~ ^[0-9]+$ ]]; then
			echo "Invalid phone number: Phone number must be a digit"
			exit 1
		fi
		case $variant in
			parentheses)
				echo "$phone_number" | sed -r 's/([0-9]{3})([0-9]{3})([0-9]{4})/(\1) \2-\3/'
				;;
			hyphens)
				echo "$phone_number" | sed -r 's/([0-9]{3})([0-9]{3})([0-9]{4})/\1-\2-\3/'
				;;
			dots)
				echo "$phone_number" | sed -r 's/([0-9]{3})([0-9]{3})([0-9]{4})/\1.\2.\3/'
				;;
			spaces)
				echo "$phone_number" | sed -r 's/([0-9]{3})([0-9]{3})([0-9]{4})/\1 \2 \3/'
				;;
			plain)
				echo "$phone_number"
				;;
		esac
		;;
	text)
		case $variant in
			uppercase)
				echo "$input" | tr '[:lower:]' '[:upper:]'
				;;
			lowercase)
				echo "$input" | tr '[:upper:]' '[:lower:]'
				;;
			capitalize)
				echo "$input" | awk '{for(i=1;i<=NF;i++){$i=toupper(substr($i,1,1))tolower(substr($i,2))}}1'
				;;
		esac
		;;
esac