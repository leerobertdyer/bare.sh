#!/usr/bin/env bash
source "$(dirname "${BASH_SOURCE[0]}")/../lib/init"


process_line() {
	touch "$BARE_DIR/tmp/variables"
	source "$BARE_DIR/tmp/variables" 2>/dev/null
	source "$BARE_HOME/rc" 2>/dev/null
	# Replace placeholders with variable values
	for i in "${!words[@]}"; do
		if [[ ${words[i]} =~ \$\((.*)\) ]]; then
			# Detect command substitution
			command=${BASH_REMATCH[1]}
			# Replace the command substitution with the output of the 'bare' command
			words[i]=$(./bare "$command" 2>/dev/null)
		elif [[ ${words[i]} =~ \$([a-zA-Z_][a-zA-Z0-9_]*) ]]; then
			var_name=${BASH_REMATCH[1]}
			if [[ -n ${!var_name} ]]; then
				words[i]=${!var_name}
			else
				echo "Error: Undefined variable '$var_name'"
				return 1
			fi
		fi
	done
	# Execute the command
	response=$(./bare "${words[@]}" 2>/dev/null)
	# Check the exit status of the command
	if [[ $? -eq 0 ]]; then
		echo "$response"
	fi
	return 0
}

# Check if the first argument is -I or -i
if [[ $1 == "-I" || $1 == "-i" ]]; then
	if [[ $1 == "-I" ]]; then
		while true; do
			echo -n "> "
			read -r line
			[[ $line == "exit" || $line == ".q" ]] && break
			read -a words <<< "$line"
			process_line "${words[@]}"
		done
	else
		shift
		words=("$@")
		process_line "${words[@]}"
	fi
	# clear up any temporary variables
	if [[ -e "$BARE_DIR/tmp/variables" ]]; then
		rm "$BARE_DIR/tmp/variables"
	fi
	exit 0
fi

# if we're this far, we're about to run a script. Check if additional positional arguments were passed
script_name=$1 && shift
additional_args=("$@")

# Construct the full path to the file
file_path="$BARE_HOME/.nb/scripts/$script_name"

# Check if the file exists and is in the var/.nb/scripts directory
if [[ -f $file_path ]]; then
	# Read the file line by line
	while IFS= read -r line || [[ -n $line ]]; do
		[[ $line = \#* ]] && continue
		eval "words=($line)"
		process_line "${words[@]}"
	done < "$file_path"
else
	echo "Error: $1 is not a file or is not in the "$BARE_HOME"/.nb/scripts directory"
fi



# clear up any temporary variables
if [[ -e "$BARE_DIR/tmp/variables" ]]; then
	rm "$BARE_DIR/tmp/variables"
fi