#!/usr/bin/env bash
# Call a script from the b/ directory, passing along any subsequent arguments
source "$(dirname "${BASH_SOURCE[0]}")/../lib/init"

# ================================== DOC ===================================
declare doc_name="bare"
declare doc_description="A collection of scripts for common tasks"
declare -a doc_options=(
	":command"	"The command to run"
) && [[ "$1" == '--inspect' ]] && return 0
# ==========================================================================

process_line() {
	# Check if the line starts with "consider" and ends with "as"
	if [[ $1 == "consider" && ${*: -2:1} == "as" ]]; then
		# Get the name of the variable to set
		var_name=${@: -1}
		# Validate the variable name
		if [[ ! $var_name =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
			echo "Error: Invalid variable name '$var_name'"
			return
		fi
		# Remove the "consider" and "as" parts from the line
		words=("${@:2:$#-3}")
		# Set the variable to the result of the ./bare command
		export "$var_name=$(./bare "${words[@]}")"
	else
		if [[ $# -gt 0 ]]; then
			./bare "$@"
		fi
	fi
}

# Check if the first argument is -I
if [[ $1 == "-I" ]]; then
	while true; do
		echo -n "> "
		read -r line
		[[ $line == "exit" || $line == ".q" ]] && break
		eval "words=($line)"
		process_line "${words[@]}"
	done
	exit 0
fi

# Construct the full path to the file
file_path="$BARE_DIR/var/.nb/scripts/$1"

# Check if the file exists and is in the var/.nb/scripts directory
if [[ -f $file_path ]]; then
	# Read the file line by line
	while IFS= read -r line || [[ -n $line ]]; do
		[[ $line = \#* ]] && continue
		eval "words=($line)"
		# Check if the line starts with "consider" and ends with "as"
		if [[ ${words[0]} == "consider" && ${words[-2]} == "as" ]]; then
			# Get the name of the variable to set
			var_name=${words[-1]}
			# Validate the variable name
			if [[ ! $var_name =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
				echo "Error: Invalid variable name '$var_name'"
				continue
			fi
			# Remove the "consider" and "as" parts from the line
			words=("${words[@]:1:${#words[@]}-3}")
			# Set the variable to the result of the ./bare command
			export "$var_name=$(./bare "${words[@]}")"
		else
			if [[ ${#words[@]} -gt 0 ]]; then
				./bare "${words[@]}"
			fi
		fi
	done < "$file_path"
else
	echo "Error: $1 is not a file or is not in the "$BARE_DIR"/var/.nb/scripts directory"
fi

exit 0