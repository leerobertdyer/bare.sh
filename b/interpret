#!/usr/bin/env bash
source "$(dirname "${BASH_SOURCE[0]}")/../lib/init"

declare doc_name="bare"
declare doc_description="A collection of scripts for common tasks"
declare -a doc_options=(
	":command"	"The command to run"
) && [[ "$1" == '--inspect' ]] && return 0

process_line() {
	# Check if the line starts with a word ending in a colon
	if [[ $1 =~ ^.*:$ ]]; then
		# Get the name of the variable to set
		var_name=${1%:}
		# Validate the variable name
		if [[ ! $var_name =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
			echo "Error: Invalid variable name '$var_name'"
			return
		fi
		# Capture everything after the colon into the variable
		export "$var_name=$(./bare "${@:2}")"
	else
		if [[ $# -gt 0 ]]; then
			./bare "$@"
		fi
	fi
}

# Check if the first argument is -I
if [[ $1 == "-I" ]]; then
	while true; do
		echo -n "> "
		read -r line
		[[ $line == "exit" || $line == ".q" ]] && break
		eval "words=($line)"
		process_line "${words[@]}"
	done
	exit 0
fi

# if we're this far, we're about to run a script. Check if additional positional arguments were passed
script_name=$1 && shift
additional_args=("$@")

# Construct the full path to the file
file_path="$BARE_DIR/var/.nb/scripts/$script_name"

# Check if the file exists and is in the var/.nb/scripts directory
if [[ -f $file_path ]]; then
	# Read the file line by line
	while IFS= read -r line || [[ -n $line ]]; do
		[[ $line = \#* ]] && continue
		eval "words=($line)"
		# Check if the line starts with a word ending in a colon
		if [[ ${words[0]} =~ ^.*:$ ]]; then
			# Get the name of the variable to set
			var_name=${words[0]%:}
			# Validate the variable name
			if [[ ! $var_name =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
				echo "Error: Invalid variable name '$var_name'"
				continue
			fi
			# Capture everything after the colon into the variable
			export "$var_name=$(./bare "${words[@]:1}" "${additional_args[@]}")"
		else
			if [[ ${#words[@]} -gt 0 ]]; then
				./bare "${words[@]}"
			fi
		fi
	done < "$file_path"
else
	echo "Error: $1 is not a file or is not in the "$BARE_DIR"/var/.nb/scripts directory"
fi

exit 0