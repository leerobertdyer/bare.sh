#!/usr/bin/env bash
source "$(dirname "${BASH_SOURCE[0]}")/../lib/init"

# Determine the file to store the variables
persist_file="$BARE_HOME/rc"
remove_var=false
temp_var=false

for arg in "$@"; do
	if [[ "$arg" == "-T" ]]; then
		temp_var=true
	elif [[ "$arg" == "-R" ]]; then
		remove_var=true
	fi
done

if [[ "$temp_var" == true ]]; then
	persist_file="$BARE_DIR/tmp/variables"
fi

touch "$persist_file"

# Remove the -T and -R arguments
set -- "${@/-T}"
set -- "${@/-R}"

case "$#" in
	1)
		if [[ "$remove_var" == true ]]; then
			variable_name="$1"
			if grep -q "^export $variable_name=" "$persist_file"; then
				# If the variable exists, remove it
				if [ "$BARE_OS" == "mac" ]; then
					sed -i "" "/^export $variable_name=/d" "$persist_file"
				else
					sed -i "/^export $variable_name=/d" "$persist_file"
				fi
			fi
			exit 0
		else
			echo "Invalid format. Use 'persist name -R' to remove a variable"
			exit 1
		fi
		;;
	*)
		if [[ "$2" != "as" && "$2" != "to" && "$2" != "=" ]]; then
			echo "Invalid format. Use 'set name as value', 'set name to value' or 'set name = value'"
			exit 1
		fi
		variable_name="$1"
		value="${@:3}"
		# Trim trailing spaces
		value="${value%"${value##*[![:space:]]}"}"
		;;
esac

# Check if the variable name is a valid script name
if [ -f "$BARE_HOME/b/$variable_name" ]; then
	# Execute the command and capture its output
	variable_name=$(bash "$BARE_HOME/b/$variable_name")
fi

if grep -q "^export $variable_name=" "$persist_file"; then
	# If the variable already exists, replace it
	if [ "$BARE_OS" == "mac" ]; then
		sed -i "" "s/^export $variable_name=.*/export $variable_name=\"$value\"/" "$persist_file"
	else
		sed -i "s/^export $variable_name=.*/export $variable_name=\"$value\"/" "$persist_file"
	fi
else
	# If the variable doesn't exist, append it
	if [ -s "$persist_file" ] && [ "$(tail -c 1 "$persist_file")" != "" ]; then
		# If the file is not empty and does not end with a newline, add a newline before the variable
		echo -e "\nexport $variable_name=\"$value\"" >> "$persist_file"
	else
		# If the file is empty or ends with a newline, don't add a newline
		echo -n "export $variable_name=\"$value\"" >> "$persist_file"
	fi
fi

# Remove trailing newlines
if [ "$BARE_OS" == "mac" ]; then
	sed -i '' -e :a -e '/^\n*$/{$d;N;};/\n$/ba' "$persist_file"
else
	sed -i -e :a -e '/^\n*$/{$d;N;};/\n$/ba' "$persist_file"
fi