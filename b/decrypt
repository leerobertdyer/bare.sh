#!/usr/bin/env bash
source "$(dirname "${BASH_SOURCE[0]}")/../lib/init"

# ================================== DOC ===================================
declare doc_name="decrypt"
declare doc_description="Decrypt text symmetrically encrypted by your BARE_ENCRYPTION_KEY"
declare -a doc_options=(
	"-s"    "The string to decrypt"
	"-f"    "The file to decrypt"
	"-o"    "The output file"
	"-k"    "The encryption key"
) && [[ $1 == "--inspect" ]] && return 0
# ==========================================================================

[[ -z "$BARE_ENCRYPTION_KEY" ]] && echo "bare_encryption_key environment variable not set" && exit 1

string=""
input_file=""
output_file=""
key=$bare_encryption_key

[[ $2 == '--inspect' ]] && unset doc_options && return 0

while getopts "s:f:o:k:" opt; do
    case $opt in
        s) string="$OPTARG";;
        f) input_file="$OPTARG";;
        o) output_file="$OPTARG";;
        k) key="$OPTARG";;
        \?) echo "Invalid option: -$OPTARG" && exit 1;;
    esac
done

if [[ -n "$input_file" ]]; then
    [[ -z "$output_file" ]] && echo "No output file specified" && exit 1
    openssl enc -aes-256-cbc -a -d -in "$input_file" -out "$output_file" -pass pass:"$key" -pbkdf2
elif [[ -n "$string" ]]; then
    echo "$string" | openssl enc -aes-256-cbc -a -d -pass pass:"$key" -pbkdf2
else
    echo "No string or input file specified" && exit 1
fi