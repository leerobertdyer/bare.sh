#!/bin/bash
source lib/init

# checks for bare_encryption_key environment variable
[[ -z "$BARE_ENCRYPTION_KEY" ]] && echo "bare_encryption_key environment variable not set" && exit 1

[[ -z "$1" ]] && b/usage -t "options" -w 2 $0 \
    -s "= string to encrypt" \
    -f "= input file to encrypt" \
    -o "  output file to write encrypted content to" \
    -k "  key to use for encryption (default: bare_encryption_key)" && exit 0;

string=""
input_file=""
output_file=""
key=$bare_encryption_key

while getopts "s:f:o:k:" opt; do
    case $opt in
        s) string="$OPTARG";;
        f) input_file="$OPTARG";;
        o) output_file="$OPTARG";;
        k) key="$OPTARG";;
        \?) echo "Invalid option: -$OPTARG" && exit 1;;
    esac
done

if [[ -n "$input_file" ]]; then
    [[ -z "$output_file" ]] && echo "No output file specified" && exit 1
    openssl enc -aes-256-cbc -a -salt -in "$input_file" -out "$output_file" -pass pass:"$key" -pbkdf2
elif [[ -n "$string" ]]; then
    openssl enc -aes-256-cbc -a -salt -in <(echo -n "$string") -pass pass:"$key" -pbkdf2
else
    echo "No string or input file specified" && exit 1
fi