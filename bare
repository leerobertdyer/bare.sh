#!/usr/bin/env bash

# Check if the current Bash version is 5.2 or higher
required_version="5.2"
current_version=$(echo "$BASH_VERSION" | sed -E 's/^([0-9]+\.[0-9]+).*/\1/')

if [[ $(uname) == 'Darwin' ]]; then
    if [[ $current_version != "$required_version" ]]; then
        echo "Error: Bash version 5.2 required. Currently running $current_version."
        echo "To install Bash 5.2, run the following command:"
        echo "  brew install bash"
        echo "Ensure that Homebrew's bin directory is in your PATH:"
        echo "  export PATH=\"/opt/homebrew/bin:\$PATH\"  # For Apple Silicon (M1+)"
        echo "  export PATH=\"/usr/local/bin:\$PATH\"    # For Intel Macs"
        exit 1
    fi
elif [[ $(uname) == 'Linux' ]]; then
    if [[ $current_version != "$required_version" ]]; then
        echo "Error: Bash version 5.2 required. Currently running $current_version."
        echo "To install Bash 5.2, run the following command:"
        echo "  sudo apt-get update && sudo apt-get install bash"
        exit 1
    fi
fi

./deps git

# Change directory to the current script's directory
cd "$(dirname "$0")" || exit

# Setup environment
touch .etc/barerc && source .etc/barerc
touch .lib/barerc && source .lib/barerc
rsync -a --ignore-existing .lib/.var/ .var

PATH="./:$PATH"

# check if we need to sync bare
touch .var/sync && {
	now=$(git log -1 --format=%ct)
	[[ $(cat .var/sync) -lt $now ]] && {
		bash .lib/sync && echo "$now" > .var/sync
	}
}

# close up shop early, if that's it
[[ -z $1 ]] && exit 0

# Check if the -I flag is provided for interactive mode

case $1 in

	-[iI]|-[tT]|terminal) # i = interactive / t = terminal

		shift && exec bash --rcfile <(cat << EOF

			source ~/.bashrc
			touch .etc/barerc && source .etc/barerc
			touch .lib/barerc && source .lib/barerc

			# put all bare commands in context
			PATH="$(pwd):\$PATH"

			# mostly for Macs running zsh by default
			export BASH_SILENCE_DEPRECATION_WARNING=1

			GREEN='\\033[40;32m'
			YELLOW='\\033[40;33m'
			GRAY='\\033[40;37m'
			RESET='\\033[0m'

			PS1="\[\${GREEN}\] 🐻 \$(basename \$(pwd)) \[\${YELLOW}\]> \[\${RESET}\]"

			printf "\n\${GRAY}entering bare terminal. type exit when ready to leave.\${RESET}\n"

EOF
		);

		;;

	*) script_name="$1" && shift && ./"$script_name" "$@" ;;

esac
