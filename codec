#!/usr/bin/env bash

./deps jq xxd php awk perl

scope="$1" && shift

read_from_file=false
input=""

[[ "$1" == "--file" ]] && read_from_file=true && shift

if $read_from_file; then
    [[ -z "$1" ]] && echo "No file specified." && exit 1
    input="$(cat "$1")"
else
    if [ -t 0 ]; then
        input="$1"
    else
        input="$(cat)"
    fi
fi

case $scope in

	text.newlines ) echo "$input" | awk '{ printf "%s\\n", $0 }' ;;

	url.encode ) echo "$input" | jq -s -R -r @uri ;;
	url.decode ) echo "$input" | perl -pe 's/%([0-9a-f]{2})/sprintf("%s", pack("H2",$1))/eig' ;;

	form-url.encode )
		if [[ -n "$input" ]]; then
			encoded=$(echo "$input" | jq -r 'to_entries | map("\(.key)=\(.value|@uri)") | join("&")')
			echo "$encoded"
		else
			echo "No input provided."
		fi
		;;

	form-url.decode )
		declare -A params=()
	
		IFS='&' read -ra key_value_pairs <<< "$input"
	
		for key_value_pair in "${key_value_pairs[@]}"; do
			IFS='=' read -r key value <<< "$key_value_pair"
	
			decoded_key=$(printf '%b' "${key//%/\\x}")
			decoded_value=$(printf '%b' "${value//%/\\x}")
	
			params["$decoded_key"]="$decoded_value"
		done
	
		json_object=$(jq -n --argjson args "$(jq -n "${params[@]}")" '$args')
		echo "$json_object"
		;;

	base64.encode ) echo "$input" | jq -s -R -r @base64 ;;
	base64.decode ) echo "$input" | perl -MMIME::Base64 -ne 'print decode_base64($_)' ;;

	hex.encode ) echo "$input" | xxd -ps ;;
	hex.decode ) echo "$input" | xxd -r -p ;;

	html.encode ) echo "$input" | jq -j -s -R -r @html ;;
	html.decode ) echo "$input" | php -R 'echo html_entity_decode($argn, ENT_QUOTES|ENT_HTML5) . "\n";' ;;

esac